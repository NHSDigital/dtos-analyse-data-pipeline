name: dtos-analyse-data-pipeline

services:
  bsselect-db:
    image: postgres:latest
    container_name: bsselect-db
    ports:
      - 5432:5432
    volumes:
      - ./infrastructure/environments/local/bsselect-postgres-setup/:/docker-entrypoint-initdb.d/
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-U",
          "${POSTGRES_USER}",
          "-d",
          "${POSTGRES_DB}",
          "-h",
          "localhost",
        ]
      interval: 5s
      retries: 5
      start_period: 5s
      timeout: 5s
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
    networks:
      sb-emulator:
        aliases:
          - "bsselect-db"

  bsselect-event-poster:
    build:
      context: ./infrastructure/environments/local/bsselect-event-poster
      dockerfile: Dockerfile
    container_name: bsselect-event-poster
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - NSP_SERVICE_LAYER_URL=${NSP_SERVICE_LAYER_URL}
    depends_on:
      - bsselect-db
    networks:
      sb-emulator:
        aliases:
          - "bsselect-event-poster"

  service-layer:
    container_name: service-layer
    restart: always
    build:
      context: ./src/function_apps/service_layer
      dockerfile: Dockerfile
    networks:
      - app-network
      - sb-emulator
    ports:
      - "7072:7072"
    environment:
      - AzureWebJobsStorage=${AZURITE_CONNECTION_STRING}
      - SERVICE_BUS_CONNECTION_STR=${SERVICE_BUS_CONNECTION_STR}
      - FUNCTIONS_WORKER_RUNTIME=python
      - TOPIC_NAME=${TOPIC_NAME}
      - ASPNETCORE_URLS=http://0.0.0.0:7072
      - USE_MANAGED_IDENTITY=${USE_MANAGED_IDENTITY}

  emulator:
    container_name: "servicebus-emulator"
    image: mcr.microsoft.com/azure-messaging/servicebus-emulator:latest
    volumes:
      - "./infrastructure/environments/local/service-bus/config.yaml:/ServiceBus_Emulator/ConfigFiles/Config.json"
    ports:
      - "5672:5672"
      - "5300:5300"
    environment:
      SQL_SERVER: sqledge
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      ACCEPT_EULA: ${ACCEPT_EULA}
      SQL_WAIT_INTERVAL: ${SQL_WAIT_INTERVAL}
    depends_on:
      - sqledge
    networks:
      sb-emulator:
        aliases:
          - "sb-emulator"

  sqledge:
    container_name: "sqledge"
    # Azure-sql-edge has problems, instead use server:2022
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      sb-emulator:
        aliases:
          - "sqledge"
      app-network:
        aliases:
          - "app-network"
    environment:
      ACCEPT_EULA: ${ACCEPT_EULA}
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}

  foundry-relay:
    container_name: foundry-relay
    restart: always
    build:
      context: ./src/function_apps/foundry_relay
      dockerfile: Dockerfile
    depends_on:
      - emulator
      - azurite
    networks:
      - app-network
      - sb-emulator
    environment:
      - AzureWebJobsStorage=${AZURITE_CONNECTION_STRING}
      - AzureWebJobsServiceBus=${SERVICE_BUS_CONNECTION_STR}
      - FUNCTIONS_WORKER_RUNTIME=python
      - FOUNDRY_API_URL=${FOUNDRY_API_URL}
      - FOUNDRY_API_TOKEN=${FOUNDRY_API_TOKEN}
      - FOUNDRY_PARENT_FOLDER_RID=${FOUNDRY_PARENT_FOLDER_RID}
      - AZURITE_CONNECTION_STRING=${AZURITE_CONNECTION_STRING}
      - AZURITE_CONTAINER_NAME=${AZURITE_CONTAINER_NAME}
      - ENVIRONMENT=${ENVIRONMENT}
      - FOUNDRY_RELAY_N_RECORDS_PER_BATCH=${FOUNDRY_RELAY_N_RECORDS_PER_BATCH}
      - ASPNETCORE_URLS=http://0.0.0.0:7071
      - TOPIC_NAME=${TOPIC_NAME}
      - SERVICE_BUS_CONNECTION_STR=${SERVICE_BUS_CONNECTION_STR}
      - SUBSCRIPTION_NAME=${SUBSCRIPTION_NAME}
      - USE_MANAGED_IDENTITY=${USE_MANAGED_IDENTITY}
    deploy:
      replicas: 1

  azurite:
    container_name: azurite
    restart: on-failure
    image: mcr.microsoft.com/azure-storage/azurite
    command: azurite --blobHost 0.0.0.0 --blobPort 10000 --queueHost 0.0.0.0 --queuePort 10001 --tableHost 0.0.0.0 --tablePort 10002 --silent
    networks:
      - app-network
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"

  azurite-setup:
    container_name: azurite-setup
    restart: on-failure
    build:
      context: ./scripts
      dockerfile: ./azurite/Dockerfile
    depends_on:
      - azurite
    networks:
      - app-network
    environment:
      - AZURITE_CONNECTION_STRING=${AZURITE_CONNECTION_STRING}
      - AZURITE_CONTAINER_NAME=${AZURITE_CONTAINER_NAME}
      - AZURITE_POISON_CONTAINER_NAME=${AZURITE_POISON_CONTAINER_NAME}

networks:
  sb-emulator:
  app-network:
    driver: ${DOCKER_NETWORK_TYPE} # Use environment variable for network type bridge for macOS and Linux, host for Windows

